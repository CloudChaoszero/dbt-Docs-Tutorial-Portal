{"results": [{"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'INCOME_BAND')}}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_income_band"], "unique_id": "model.customer_analytics.snowflake_demo_income_band", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_income_band.sql", "original_file_path": "models/base/customers/snowflake_demo_income_band.sql", "name": "snowflake_demo_income_band", "resource_type": "model", "alias": "snowflake_demo_income_band", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "INCOME_BAND"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.INCOME_BAND"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_income_band.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.INCOME_BAND\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.INCOME_BAND\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.018932819366455078, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.366654Z", "completed_at": "2020-10-05T04:50:03.384437Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.384703Z", "completed_at": "2020-10-05T04:50:03.384713Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'HOUSEHOLD_DEMOGRAPHICS')}}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_household_demographics"], "unique_id": "model.customer_analytics.snowflake_demo_household_demographics", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_household_demographics.sql", "original_file_path": "models/base/customers/snowflake_demo_household_demographics.sql", "name": "snowflake_demo_household_demographics", "resource_type": "model", "alias": "snowflake_demo_household_demographics", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "HOUSEHOLD_DEMOGRAPHICS"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.HOUSEHOLD_DEMOGRAPHICS"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_household_demographics.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.HOUSEHOLD_DEMOGRAPHICS\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.HOUSEHOLD_DEMOGRAPHICS\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.008507013320922852, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.385660Z", "completed_at": "2020-10-05T04:50:03.393251Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.393502Z", "completed_at": "2020-10-05T04:50:03.393509Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\n    * This is an example of considerations for BASE layer implementation in \n    * the dbt Tutorial I created.\n    * It includes the following considerations in changes for BASE layer:\n        * Explicity Data types\n        * Calling a segment of columns\n        * Column Renaming\n*/\nWITH source AS (\n    SELECT * FROM {{ source('customers', 'CATALOG_SALES')}}\n    LIMIT 10000000 -- Limiting due to data limitation via Trial Account :(\n),\n\n-- Explicitly defining data types & potential renaming\ndata_type_rename_conversion AS (\n    \n    SELECT\n        CS_SOLD_DATE_SK::NUMBER AS CS_SOLD_DATE_SK,\n        CS_SOLD_TIME_SK::NUMBER AS CS_SOLD_TIME_SK, \n        CS_SHIP_DATE_SK::NUMBER AS CS_SHIP_DATE_SK,\n        CS_BILL_CUSTOMER_SK::NUMBER AS CS_BILL_CUSTOMER_SK,\n        CS_BILL_CDEMO_SK::NUMBER AS CS_BILL_CDEMO_SK,\n        CS_BILL_HDEMO_SK::NUMBER AS CS_BILL_HDEMO_SK,\n        CS_BILL_ADDR_SK::NUMBER AS CS_BILL_ADDR_SK,\n        /* We'll look at this later, \n            about including after creating MVP mode\n        */\n        -- CS_SHIP_CUSTOMER_SK::NUMBER AS CS_SHIP_CUSTOMER,\n        -- CS_SHIP_CDEMO_SK::NUMBER AS CS_SHIP_CDEMO,\n        -- CS_SHIP_HDEMO_SK::NUMBER AS CS_SHIP_HDEMO,\n        -- CS_SHIP_ADDR_SK::NUMBER AS CS_SHIP_ADDR,\n        -- CS_SHIP_MODE_SK::NUMBER AS CS_SHIP_MODE_SK,\n        CS_CALL_CENTER_SK::NUMBER AS CS_CALL_CENTER_SK,\n        CS_CATALOG_PAGE_SK::NUMBER AS CS_CATALOG_PAGE_SK,\n        CS_WAREHOUSE_SK::NUMBER AS CS_WAREHOUSE_SK,\n        CS_ITEM_SK::NUMBER AS CS_ITEM_SK,\n        CS_PROMO_SK::NUMBER AS CS_PROMO_SK,\n        CS_ORDER_NUMBER::NUMBER AS CS_ORDER_NUMBER,\n        CS_QUANTITY::NUMBER AS CS_QUANTITY,\n        CS_WHOLESALE_COST::NUMBER AS CS_WHOLESALE_COST,\n        CS_LIST_PRICE::NUMBER AS CS_LIST_PRICE,\n        CS_SALES_PRICE::NUMBER AS CS_SALES_PRICE,\n        CS_EXT_DISCOUNT_AMT::NUMBER AS CS_EXT_DISCOUNT_AMT,\n        CS_EXT_SALES_PRICE::NUMBER AS CS_EXT_SALES_PRICE,\n        CS_EXT_WHOLESALE_COST::NUMBER AS CS_EXT_WHOLESALE_COST,\n        CS_EXT_LIST_PRICE::NUMBER AS CS_EXT_LIST_PRICE,\n        CS_EXT_TAX::NUMBER AS CS_EXT_TAX,\n        CS_COUPON_AMT::NUMBER AS CS_COUPON_AMT,\n        CS_EXT_SHIP_COST::NUMBER AS CS_EXT_SHIP_COST,\n        CS_NET_PAID::NUMBER AS CS_NET_PAID,\n        CS_NET_PAID_INC_TAX::NUMBER AS CS_NET_PAID_INC_TAX,\n        CS_NET_PAID_INC_SHIP::NUMBER AS CS_NET_PAID_INC_SHIP,\n        CS_NET_PAID_INC_SHIP_TAX::NUMBER AS CS_NET_PAID_INC_SHIP_TAX,\n        CS_NET_PROFIT::NUMBER AS CS_NET_PROFIT\n  FROM source\n\n)\n\nSELECT * FROM data_type_rename_conversion", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_catalog_sales"], "unique_id": "model.customer_analytics.snowflake_demo_catalog_sales", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_catalog_sales.sql", "original_file_path": "models/base/customers/snowflake_demo_catalog_sales.sql", "name": "snowflake_demo_catalog_sales", "resource_type": "model", "alias": "snowflake_demo_catalog_sales", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "CATALOG_SALES"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.CATALOG_SALES"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_catalog_sales.sql", "compiled": true, "compiled_sql": "/*\n    * This is an example of considerations for BASE layer implementation in \n    * the dbt Tutorial I created.\n    * It includes the following considerations in changes for BASE layer:\n        * Explicity Data types\n        * Calling a segment of columns\n        * Column Renaming\n*/\nWITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CATALOG_SALES\n    LIMIT 10000000 -- Limiting due to data limitation via Trial Account :(\n),\n\n-- Explicitly defining data types & potential renaming\ndata_type_rename_conversion AS (\n    \n    SELECT\n        CS_SOLD_DATE_SK::NUMBER AS CS_SOLD_DATE_SK,\n        CS_SOLD_TIME_SK::NUMBER AS CS_SOLD_TIME_SK, \n        CS_SHIP_DATE_SK::NUMBER AS CS_SHIP_DATE_SK,\n        CS_BILL_CUSTOMER_SK::NUMBER AS CS_BILL_CUSTOMER_SK,\n        CS_BILL_CDEMO_SK::NUMBER AS CS_BILL_CDEMO_SK,\n        CS_BILL_HDEMO_SK::NUMBER AS CS_BILL_HDEMO_SK,\n        CS_BILL_ADDR_SK::NUMBER AS CS_BILL_ADDR_SK,\n        /* We'll look at this later, \n            about including after creating MVP mode\n        */\n        -- CS_SHIP_CUSTOMER_SK::NUMBER AS CS_SHIP_CUSTOMER,\n        -- CS_SHIP_CDEMO_SK::NUMBER AS CS_SHIP_CDEMO,\n        -- CS_SHIP_HDEMO_SK::NUMBER AS CS_SHIP_HDEMO,\n        -- CS_SHIP_ADDR_SK::NUMBER AS CS_SHIP_ADDR,\n        -- CS_SHIP_MODE_SK::NUMBER AS CS_SHIP_MODE_SK,\n        CS_CALL_CENTER_SK::NUMBER AS CS_CALL_CENTER_SK,\n        CS_CATALOG_PAGE_SK::NUMBER AS CS_CATALOG_PAGE_SK,\n        CS_WAREHOUSE_SK::NUMBER AS CS_WAREHOUSE_SK,\n        CS_ITEM_SK::NUMBER AS CS_ITEM_SK,\n        CS_PROMO_SK::NUMBER AS CS_PROMO_SK,\n        CS_ORDER_NUMBER::NUMBER AS CS_ORDER_NUMBER,\n        CS_QUANTITY::NUMBER AS CS_QUANTITY,\n        CS_WHOLESALE_COST::NUMBER AS CS_WHOLESALE_COST,\n        CS_LIST_PRICE::NUMBER AS CS_LIST_PRICE,\n        CS_SALES_PRICE::NUMBER AS CS_SALES_PRICE,\n        CS_EXT_DISCOUNT_AMT::NUMBER AS CS_EXT_DISCOUNT_AMT,\n        CS_EXT_SALES_PRICE::NUMBER AS CS_EXT_SALES_PRICE,\n        CS_EXT_WHOLESALE_COST::NUMBER AS CS_EXT_WHOLESALE_COST,\n        CS_EXT_LIST_PRICE::NUMBER AS CS_EXT_LIST_PRICE,\n        CS_EXT_TAX::NUMBER AS CS_EXT_TAX,\n        CS_COUPON_AMT::NUMBER AS CS_COUPON_AMT,\n        CS_EXT_SHIP_COST::NUMBER AS CS_EXT_SHIP_COST,\n        CS_NET_PAID::NUMBER AS CS_NET_PAID,\n        CS_NET_PAID_INC_TAX::NUMBER AS CS_NET_PAID_INC_TAX,\n        CS_NET_PAID_INC_SHIP::NUMBER AS CS_NET_PAID_INC_SHIP,\n        CS_NET_PAID_INC_SHIP_TAX::NUMBER AS CS_NET_PAID_INC_SHIP_TAX,\n        CS_NET_PROFIT::NUMBER AS CS_NET_PROFIT\n  FROM source\n\n)\n\nSELECT * FROM data_type_rename_conversion", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\n    * This is an example of considerations for BASE layer implementation in \n    * the dbt Tutorial I created.\n    * It includes the following considerations in changes for BASE layer:\n        * Explicity Data types\n        * Calling a segment of columns\n        * Column Renaming\n*/\nWITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CATALOG_SALES\n    LIMIT 10000000 -- Limiting due to data limitation via Trial Account :(\n),\n\n-- Explicitly defining data types & potential renaming\ndata_type_rename_conversion AS (\n    \n    SELECT\n        CS_SOLD_DATE_SK::NUMBER AS CS_SOLD_DATE_SK,\n        CS_SOLD_TIME_SK::NUMBER AS CS_SOLD_TIME_SK, \n        CS_SHIP_DATE_SK::NUMBER AS CS_SHIP_DATE_SK,\n        CS_BILL_CUSTOMER_SK::NUMBER AS CS_BILL_CUSTOMER_SK,\n        CS_BILL_CDEMO_SK::NUMBER AS CS_BILL_CDEMO_SK,\n        CS_BILL_HDEMO_SK::NUMBER AS CS_BILL_HDEMO_SK,\n        CS_BILL_ADDR_SK::NUMBER AS CS_BILL_ADDR_SK,\n        /* We'll look at this later, \n            about including after creating MVP mode\n        */\n        -- CS_SHIP_CUSTOMER_SK::NUMBER AS CS_SHIP_CUSTOMER,\n        -- CS_SHIP_CDEMO_SK::NUMBER AS CS_SHIP_CDEMO,\n        -- CS_SHIP_HDEMO_SK::NUMBER AS CS_SHIP_HDEMO,\n        -- CS_SHIP_ADDR_SK::NUMBER AS CS_SHIP_ADDR,\n        -- CS_SHIP_MODE_SK::NUMBER AS CS_SHIP_MODE_SK,\n        CS_CALL_CENTER_SK::NUMBER AS CS_CALL_CENTER_SK,\n        CS_CATALOG_PAGE_SK::NUMBER AS CS_CATALOG_PAGE_SK,\n        CS_WAREHOUSE_SK::NUMBER AS CS_WAREHOUSE_SK,\n        CS_ITEM_SK::NUMBER AS CS_ITEM_SK,\n        CS_PROMO_SK::NUMBER AS CS_PROMO_SK,\n        CS_ORDER_NUMBER::NUMBER AS CS_ORDER_NUMBER,\n        CS_QUANTITY::NUMBER AS CS_QUANTITY,\n        CS_WHOLESALE_COST::NUMBER AS CS_WHOLESALE_COST,\n        CS_LIST_PRICE::NUMBER AS CS_LIST_PRICE,\n        CS_SALES_PRICE::NUMBER AS CS_SALES_PRICE,\n        CS_EXT_DISCOUNT_AMT::NUMBER AS CS_EXT_DISCOUNT_AMT,\n        CS_EXT_SALES_PRICE::NUMBER AS CS_EXT_SALES_PRICE,\n        CS_EXT_WHOLESALE_COST::NUMBER AS CS_EXT_WHOLESALE_COST,\n        CS_EXT_LIST_PRICE::NUMBER AS CS_EXT_LIST_PRICE,\n        CS_EXT_TAX::NUMBER AS CS_EXT_TAX,\n        CS_COUPON_AMT::NUMBER AS CS_COUPON_AMT,\n        CS_EXT_SHIP_COST::NUMBER AS CS_EXT_SHIP_COST,\n        CS_NET_PAID::NUMBER AS CS_NET_PAID,\n        CS_NET_PAID_INC_TAX::NUMBER AS CS_NET_PAID_INC_TAX,\n        CS_NET_PAID_INC_SHIP::NUMBER AS CS_NET_PAID_INC_SHIP,\n        CS_NET_PAID_INC_SHIP_TAX::NUMBER AS CS_NET_PAID_INC_SHIP_TAX,\n        CS_NET_PROFIT::NUMBER AS CS_NET_PROFIT\n  FROM source\n\n)\n\nSELECT * FROM data_type_rename_conversion"}, "error": null, "status": null, "execution_time": 0.010567188262939453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.394433Z", "completed_at": "2020-10-05T04:50:03.404032Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.404322Z", "completed_at": "2020-10-05T04:50:03.404329Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('misc', 'DATE_DIM')}}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_misc", "fqn": ["customer_analytics", "base", "other", "snowflake_demo_dates"], "unique_id": "model.customer_analytics.snowflake_demo_dates", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/other/snowflake_demo_dates.sql", "original_file_path": "models/base/other/snowflake_demo_dates.sql", "name": "snowflake_demo_dates", "resource_type": "model", "alias": "snowflake_demo_dates", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "misc", "tags": ["misc_info", "base"]}, "tags": ["misc_info", "base"], "refs": [], "sources": [["misc", "DATE_DIM"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.misc.DATE_DIM"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/other/snowflake_demo_dates.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.DATE_DIM\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.DATE_DIM\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.009567022323608398, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.405414Z", "completed_at": "2020-10-05T04:50:03.413854Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.414264Z", "completed_at": "2020-10-05T04:50:03.414272Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('misc', 'TIME_DIM')}}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_misc", "fqn": ["customer_analytics", "base", "other", "snowflake_demo_times"], "unique_id": "model.customer_analytics.snowflake_demo_times", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/other/snowflake_demo_times.sql", "original_file_path": "models/base/other/snowflake_demo_times.sql", "name": "snowflake_demo_times", "resource_type": "model", "alias": "snowflake_demo_times", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "misc", "tags": ["misc_info", "base"]}, "tags": ["misc_info", "base"], "refs": [], "sources": [["misc", "TIME_DIM"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.misc.TIME_DIM"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/other/snowflake_demo_times.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.TIME_DIM\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.TIME_DIM\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.009992837905883789, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.415610Z", "completed_at": "2020-10-05T04:50:03.424362Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.424654Z", "completed_at": "2020-10-05T04:50:03.424663Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'CUSTOMER')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_customer"], "unique_id": "model.customer_analytics.snowflake_demo_customer", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_customer.sql", "original_file_path": "models/base/customers/snowflake_demo_customer.sql", "name": "snowflake_demo_customer", "resource_type": "model", "alias": "snowflake_demo_customer", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "CUSTOMER"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.CUSTOMER"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_customer.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CUSTOMER\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CUSTOMER\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.01045083999633789, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.425638Z", "completed_at": "2020-10-05T04:50:03.434855Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.435280Z", "completed_at": "2020-10-05T04:50:03.435290Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'CUSTOMER_DEMOGRAPHICS')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_customer_demographics"], "unique_id": "model.customer_analytics.snowflake_demo_customer_demographics", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_customer_demographics.sql", "original_file_path": "models/base/customers/snowflake_demo_customer_demographics.sql", "name": "snowflake_demo_customer_demographics", "resource_type": "model", "alias": "snowflake_demo_customer_demographics", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "CUSTOMER_DEMOGRAPHICS"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.CUSTOMER_DEMOGRAPHICS"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_customer_demographics.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CUSTOMER_DEMOGRAPHICS\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CUSTOMER_DEMOGRAPHICS\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.009185075759887695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.436461Z", "completed_at": "2020-10-05T04:50:03.444396Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.444792Z", "completed_at": "2020-10-05T04:50:03.444801Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'STORE')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_store"], "unique_id": "model.customer_analytics.snowflake_demo_store", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_store.sql", "original_file_path": "models/base/customers/snowflake_demo_store.sql", "name": "snowflake_demo_store", "resource_type": "model", "alias": "snowflake_demo_store", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "STORE"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.STORE"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_store.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.STORE\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.STORE\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.009263038635253906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.446026Z", "completed_at": "2020-10-05T04:50:03.453995Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.454430Z", "completed_at": "2020-10-05T04:50:03.454440Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'STORE_RETURNS')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_store_returns"], "unique_id": "model.customer_analytics.snowflake_demo_store_returns", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_store_returns.sql", "original_file_path": "models/base/customers/snowflake_demo_store_returns.sql", "name": "snowflake_demo_store_returns", "resource_type": "model", "alias": "snowflake_demo_store_returns", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "STORE_RETURNS"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.STORE_RETURNS"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_store_returns.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.STORE_RETURNS\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.STORE_RETURNS\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.008380889892578125, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.455658Z", "completed_at": "2020-10-05T04:50:03.463093Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.463332Z", "completed_at": "2020-10-05T04:50:03.463339Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('customers', 'STORE_SALES')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_customers", "fqn": ["customer_analytics", "base", "customers", "snowflake_demo_store_sales"], "unique_id": "model.customer_analytics.snowflake_demo_store_sales", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/customers/snowflake_demo_store_sales.sql", "original_file_path": "models/base/customers/snowflake_demo_store_sales.sql", "name": "snowflake_demo_store_sales", "resource_type": "model", "alias": "snowflake_demo_store_sales", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "customers", "tags": ["customer_info", "base"]}, "tags": ["customer_info", "base"], "refs": [], "sources": [["customers", "STORE_SALES"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.customers.STORE_SALES"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/customers/snowflake_demo_store_sales.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.STORE_SALES\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.STORE_SALES\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.00829005241394043, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.464430Z", "completed_at": "2020-10-05T04:50:03.471764Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.472037Z", "completed_at": "2020-10-05T04:50:03.472044Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('website', 'WEB_PAGE')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_website", "fqn": ["customer_analytics", "base", "website", "snowflake_dw_web_page"], "unique_id": "model.customer_analytics.snowflake_dw_web_page", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/website/snowflake_dw_web_page.sql", "original_file_path": "models/base/website/snowflake_dw_web_page.sql", "name": "snowflake_dw_web_page", "resource_type": "model", "alias": "snowflake_dw_web_page", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "website", "tags": ["website_info", "base"]}, "tags": ["website_info", "base"], "refs": [], "sources": [["website", "WEB_PAGE"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.website.WEB_PAGE"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/website/snowflake_dw_web_page.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.WEB_PAGE\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.WEB_PAGE\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.010616064071655273, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.473093Z", "completed_at": "2020-10-05T04:50:03.482610Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.482924Z", "completed_at": "2020-10-05T04:50:03.482931Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('website', 'WEB_RETURNS')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_website", "fqn": ["customer_analytics", "base", "website", "snowflake_dw_web_returns"], "unique_id": "model.customer_analytics.snowflake_dw_web_returns", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/website/snowflake_dw_web_returns.sql", "original_file_path": "models/base/website/snowflake_dw_web_returns.sql", "name": "snowflake_dw_web_returns", "resource_type": "model", "alias": "snowflake_dw_web_returns", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "website", "tags": ["website_info", "base"]}, "tags": ["website_info", "base"], "refs": [], "sources": [["website", "WEB_RETURNS"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.website.WEB_RETURNS"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/website/snowflake_dw_web_returns.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.WEB_RETURNS\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.WEB_RETURNS\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.00898885726928711, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.484083Z", "completed_at": "2020-10-05T04:50:03.491771Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.492205Z", "completed_at": "2020-10-05T04:50:03.492214Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ source('website', 'WEB_SALES')}}\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_website", "fqn": ["customer_analytics", "base", "website", "snowflake_dw_web_sales"], "unique_id": "model.customer_analytics.snowflake_dw_web_sales", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "base/website/snowflake_dw_web_sales.sql", "original_file_path": "models/base/website/snowflake_dw_web_sales.sql", "name": "snowflake_dw_web_sales", "resource_type": "model", "alias": "snowflake_dw_web_sales", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "website", "tags": ["website_info", "base"]}, "tags": ["website_info", "base"], "refs": [], "sources": [["website", "WEB_SALES"]], "depends_on": {"macros": [], "nodes": ["source.customer_analytics.website.WEB_SALES"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/base/website/snowflake_dw_web_sales.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.WEB_SALES\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.WEB_SALES\n    LIMIT 10000 -- Limiting due to data limitation via Trial Account\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.01044011116027832, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.493627Z", "completed_at": "2020-10-05T04:50:03.503062Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.503342Z", "completed_at": "2020-10-05T04:50:03.503349Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM  {{ ref('snowflake_demo_income_band') }}\n),\n\nfinal AS (\n\n    SELECT\n        ib_income_band_sk AS income_band_sk,\n        ib_lower_bound || '-' || ib_upper_bound AS income_band_bound\n    FROM source\n)\n\nSELECT * FROM final", "database": "DEMO_DB", "schema": "dev_raulingaverage_stage", "fqn": ["customer_analytics", "stage", "stg_customer_income_band"], "unique_id": "model.customer_analytics.stg_customer_income_band", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "stage/stg_customer_income_band.sql", "original_file_path": "models/stage/stg_customer_income_band.sql", "name": "stg_customer_income_band", "resource_type": "model", "alias": "stg_customer_income_band", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "stage", "tags": []}, "tags": [], "refs": [["snowflake_demo_income_band"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.snowflake_demo_income_band"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/stage/stg_customer_income_band.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM  DEMO_DB.dev_raulingaverage_customers.snowflake_demo_income_band\n),\n\nfinal AS (\n\n    SELECT\n        ib_income_band_sk AS income_band_sk,\n        ib_lower_bound || '-' || ib_upper_bound AS income_band_bound\n    FROM source\n)\n\nSELECT * FROM final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM  DEMO_DB.dev_raulingaverage_customers.snowflake_demo_income_band\n),\n\nfinal AS (\n\n    SELECT\n        ib_income_band_sk AS income_band_sk,\n        ib_lower_bound || '-' || ib_upper_bound AS income_band_bound\n    FROM source\n)\n\nSELECT * FROM final"}, "error": null, "status": null, "execution_time": 0.007827043533325195, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.504275Z", "completed_at": "2020-10-05T04:50:03.511102Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.511414Z", "completed_at": "2020-10-05T04:50:03.511422Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM  {{ ref('snowflake_demo_customer') }}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage_stage", "fqn": ["customer_analytics", "stage", "stg_customers"], "unique_id": "model.customer_analytics.stg_customers", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "stage/stg_customers.sql", "original_file_path": "models/stage/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "stage", "tags": []}, "tags": [], "refs": [["snowflake_demo_customer"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.snowflake_demo_customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/stage/stg_customers.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM  DEMO_DB.dev_raulingaverage_customers.snowflake_demo_customer\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM  DEMO_DB.dev_raulingaverage_customers.snowflake_demo_customer\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.008968830108642578, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.512737Z", "completed_at": "2020-10-05T04:50:03.520532Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.520790Z", "completed_at": "2020-10-05T04:50:03.520797Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH household_demographics_source AS (\n    SELECT * FROM {{ ref('snowflake_demo_household_demographics') }}\n),\n\nincome_band_source AS (\n    SELECT * FROM {{ ref('stg_customer_income_band') }}\n),\n\nenrichment AS (\n\n    SELECT\n        household.*,\n        income.income_band_bound\n    FROM\n        household_demographics_source AS household\n    LEFT JOIN \n        income_band_source AS income\n    ON\n        household.hd_income_band_sk = income.income_band_sk\n)\n\nSELECT * FROM enrichment", "database": "DEMO_DB", "schema": "dev_raulingaverage_stage", "fqn": ["customer_analytics", "stage", "stg_household_demographics"], "unique_id": "model.customer_analytics.stg_household_demographics", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "stage/stg_household_demographics.sql", "original_file_path": "models/stage/stg_household_demographics.sql", "name": "stg_household_demographics", "resource_type": "model", "alias": "stg_household_demographics", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "stage", "tags": []}, "tags": [], "refs": [["snowflake_demo_household_demographics"], ["stg_customer_income_band"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.snowflake_demo_household_demographics", "model.customer_analytics.stg_customer_income_band"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/stage/stg_household_demographics.sql", "compiled": true, "compiled_sql": "WITH household_demographics_source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_customers.snowflake_demo_household_demographics\n),\n\nincome_band_source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_customer_income_band\n),\n\nenrichment AS (\n\n    SELECT\n        household.*,\n        income.income_band_bound\n    FROM\n        household_demographics_source AS household\n    LEFT JOIN \n        income_band_source AS income\n    ON\n        household.hd_income_band_sk = income.income_band_sk\n)\n\nSELECT * FROM enrichment", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH household_demographics_source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_customers.snowflake_demo_household_demographics\n),\n\nincome_band_source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_customer_income_band\n),\n\nenrichment AS (\n\n    SELECT\n        household.*,\n        income.income_band_bound\n    FROM\n        household_demographics_source AS household\n    LEFT JOIN \n        income_band_source AS income\n    ON\n        household.hd_income_band_sk = income.income_band_sk\n)\n\nSELECT * FROM enrichment"}, "error": null, "status": null, "execution_time": 0.009639263153076172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.521730Z", "completed_at": "2020-10-05T04:50:03.530312Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.530679Z", "completed_at": "2020-10-05T04:50:03.530687Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM  {{ ref('stg_customers') }}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "mart", "dim", "customers_dim"], "unique_id": "model.customer_analytics.customers_dim", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "mart/dim/customers_dim.sql", "original_file_path": "models/mart/dim/customers_dim.sql", "name": "customers_dim", "resource_type": "model", "alias": "customers_dim", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.stg_customers"]}, "description": "", "columns": {}, "meta": {"contains_pii": true}, "docs": {"show": true}, "patch_path": "models/mart/mart_schema.yml", "build_path": "target/compiled/customer_analytics/models/mart/dim/customers_dim.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM  DEMO_DB.dev_raulingaverage_stage.stg_customers\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM  DEMO_DB.dev_raulingaverage_stage.stg_customers\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.009001970291137695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.531654Z", "completed_at": "2020-10-05T04:50:03.539290Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.539804Z", "completed_at": "2020-10-05T04:50:03.539814Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH catalog_sales_source AS (\n    SELECT\n        cs_sold_date_sk,\n        cs_sold_time_sk,\n        cs_ship_date_sk,\n        cs_item_sk,\n        cs_order_number,\n        cs_quantity,\n        cs_bill_hdemo_sk,\n        cs_wholesale_cost,\n        cs_list_price,\n        cs_sales_price,\n        cs_ext_discount_amt,\n        cs_ext_sales_price,\n        cs_ext_wholesale_cost,\n        cs_ext_list_price,\n        cs_ext_tax,\n        cs_coupon_amt,\n        cs_ext_ship_cost,\n        cs_net_paid,\n        cs_net_paid_inc_tax,\n        cs_net_paid_inc_ship,\n        cs_net_paid_inc_ship_tax,\n        cs_net_profit \n    FROM \n        {{ ref('snowflake_demo_catalog_sales') }}\n),\n\n\n-- Note: Could refer optimize by specifying columns to JOIN on.\nhousehold_demographics_source AS (\n    SELECT * FROM {{ ref('stg_household_demographics') }}\n),\n\ndate_ref AS (\n    SELECT * FROM {{ ref('snowflake_demo_dates') }}\n),\n\ntime_ref AS (\n    SELECT * FROM {{ ref('snowflake_demo_times') }}\n),\n\nfinal AS (\n    \n    SELECT \n        dates.d_date AS customer_sales_sold_date,\n        dates2.t_am_pm AS customer_sales_sold_time_am_pm,\n        dates2.t_sub_shift AS customer_sales_sold_time_sub_shift,\n        dates3.d_date AS customer_sales_ship_date,\n        COALESCE(hd.income_band_bound,\n            'Unidentified') AS income_band_bound,\n        hd.hd_buy_potential AS household_buy_potential,\n        cs.cs_item_sk AS item_sk,\n        cs.cs_order_number AS order_number,\n        cs.cs_quantity AS quantity,\n        cs.cs_wholesale_cost AS wholesale_cost,\n        cs.cs_list_price AS list_price,\n        cs.cs_sales_price AS sales_price,\n        cs.cs_ext_discount_amt AS ext_discount_amount,\n        cs.cs_ext_sales_price AS ext_sales_price,\n        cs.cs_ext_wholesale_cost AS ext_wholesale_cost,\n        cs.cs_ext_list_price AS ext_list_price,\n        cs.cs_ext_tax AS ext_tax,\n        cs.cs_coupon_amt AS coupon_amount,\n        cs.cs_ext_ship_cost AS ext_ship_cost,\n        cs.cs_net_paid AS net_paid,\n        cs.cs_net_paid_inc_tax AS net_paid_income_tax,\n        cs.cs_net_paid_inc_ship AS net_paid_income_ship,\n        cs.cs_net_paid_inc_ship_tax net_paid_income_ship_tax,\n        cs.cs_net_profit AS net_amount \n    FROM \n        catalog_sales_source AS cs\n    \n    LEFT JOIN \n        date_ref AS dates\n    ON \n        cs.cs_sold_date_sk = dates.d_date_sk\n    LEFT JOIN \n        time_ref AS dates2\n    ON \n        cs.cs_sold_time_sk = dates2.t_time_sk\n    LEFT JOIN \n                date_ref AS dates3\n    ON \n        cs.cs_ship_date_sk = dates3.d_date_sk\n    LEFT JOIN \n        household_demographics_source AS hd\n    ON \n        cs.cs_bill_hdemo_sk = hd.hd_demo_sk\n\n)\n\nSELECT * FROM final", "database": "DEMO_DB", "schema": "dev_raulingaverage_stage", "fqn": ["customer_analytics", "stage", "stg_customer_catalog_sales"], "unique_id": "model.customer_analytics.stg_customer_catalog_sales", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "stage/stg_customer_catalog_sales.sql", "original_file_path": "models/stage/stg_customer_catalog_sales.sql", "name": "stg_customer_catalog_sales", "resource_type": "model", "alias": "stg_customer_catalog_sales", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "stage", "tags": []}, "tags": [], "refs": [["snowflake_demo_catalog_sales"], ["stg_household_demographics"], ["snowflake_demo_dates"], ["snowflake_demo_times"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.snowflake_demo_catalog_sales", "model.customer_analytics.stg_household_demographics", "model.customer_analytics.snowflake_demo_dates", "model.customer_analytics.snowflake_demo_times"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/stage/stg_customer_catalog_sales.sql", "compiled": true, "compiled_sql": "WITH catalog_sales_source AS (\n    SELECT\n        cs_sold_date_sk,\n        cs_sold_time_sk,\n        cs_ship_date_sk,\n        cs_item_sk,\n        cs_order_number,\n        cs_quantity,\n        cs_bill_hdemo_sk,\n        cs_wholesale_cost,\n        cs_list_price,\n        cs_sales_price,\n        cs_ext_discount_amt,\n        cs_ext_sales_price,\n        cs_ext_wholesale_cost,\n        cs_ext_list_price,\n        cs_ext_tax,\n        cs_coupon_amt,\n        cs_ext_ship_cost,\n        cs_net_paid,\n        cs_net_paid_inc_tax,\n        cs_net_paid_inc_ship,\n        cs_net_paid_inc_ship_tax,\n        cs_net_profit \n    FROM \n        DEMO_DB.dev_raulingaverage_customers.snowflake_demo_catalog_sales\n),\n\n\n-- Note: Could refer optimize by specifying columns to JOIN on.\nhousehold_demographics_source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_household_demographics\n),\n\ndate_ref AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_misc.snowflake_demo_dates\n),\n\ntime_ref AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_misc.snowflake_demo_times\n),\n\nfinal AS (\n    \n    SELECT \n        dates.d_date AS customer_sales_sold_date,\n        dates2.t_am_pm AS customer_sales_sold_time_am_pm,\n        dates2.t_sub_shift AS customer_sales_sold_time_sub_shift,\n        dates3.d_date AS customer_sales_ship_date,\n        COALESCE(hd.income_band_bound,\n            'Unidentified') AS income_band_bound,\n        hd.hd_buy_potential AS household_buy_potential,\n        cs.cs_item_sk AS item_sk,\n        cs.cs_order_number AS order_number,\n        cs.cs_quantity AS quantity,\n        cs.cs_wholesale_cost AS wholesale_cost,\n        cs.cs_list_price AS list_price,\n        cs.cs_sales_price AS sales_price,\n        cs.cs_ext_discount_amt AS ext_discount_amount,\n        cs.cs_ext_sales_price AS ext_sales_price,\n        cs.cs_ext_wholesale_cost AS ext_wholesale_cost,\n        cs.cs_ext_list_price AS ext_list_price,\n        cs.cs_ext_tax AS ext_tax,\n        cs.cs_coupon_amt AS coupon_amount,\n        cs.cs_ext_ship_cost AS ext_ship_cost,\n        cs.cs_net_paid AS net_paid,\n        cs.cs_net_paid_inc_tax AS net_paid_income_tax,\n        cs.cs_net_paid_inc_ship AS net_paid_income_ship,\n        cs.cs_net_paid_inc_ship_tax net_paid_income_ship_tax,\n        cs.cs_net_profit AS net_amount \n    FROM \n        catalog_sales_source AS cs\n    \n    LEFT JOIN \n        date_ref AS dates\n    ON \n        cs.cs_sold_date_sk = dates.d_date_sk\n    LEFT JOIN \n        time_ref AS dates2\n    ON \n        cs.cs_sold_time_sk = dates2.t_time_sk\n    LEFT JOIN \n                date_ref AS dates3\n    ON \n        cs.cs_ship_date_sk = dates3.d_date_sk\n    LEFT JOIN \n        household_demographics_source AS hd\n    ON \n        cs.cs_bill_hdemo_sk = hd.hd_demo_sk\n\n)\n\nSELECT * FROM final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH catalog_sales_source AS (\n    SELECT\n        cs_sold_date_sk,\n        cs_sold_time_sk,\n        cs_ship_date_sk,\n        cs_item_sk,\n        cs_order_number,\n        cs_quantity,\n        cs_bill_hdemo_sk,\n        cs_wholesale_cost,\n        cs_list_price,\n        cs_sales_price,\n        cs_ext_discount_amt,\n        cs_ext_sales_price,\n        cs_ext_wholesale_cost,\n        cs_ext_list_price,\n        cs_ext_tax,\n        cs_coupon_amt,\n        cs_ext_ship_cost,\n        cs_net_paid,\n        cs_net_paid_inc_tax,\n        cs_net_paid_inc_ship,\n        cs_net_paid_inc_ship_tax,\n        cs_net_profit \n    FROM \n        DEMO_DB.dev_raulingaverage_customers.snowflake_demo_catalog_sales\n),\n\n\n-- Note: Could refer optimize by specifying columns to JOIN on.\nhousehold_demographics_source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_household_demographics\n),\n\ndate_ref AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_misc.snowflake_demo_dates\n),\n\ntime_ref AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_misc.snowflake_demo_times\n),\n\nfinal AS (\n    \n    SELECT \n        dates.d_date AS customer_sales_sold_date,\n        dates2.t_am_pm AS customer_sales_sold_time_am_pm,\n        dates2.t_sub_shift AS customer_sales_sold_time_sub_shift,\n        dates3.d_date AS customer_sales_ship_date,\n        COALESCE(hd.income_band_bound,\n            'Unidentified') AS income_band_bound,\n        hd.hd_buy_potential AS household_buy_potential,\n        cs.cs_item_sk AS item_sk,\n        cs.cs_order_number AS order_number,\n        cs.cs_quantity AS quantity,\n        cs.cs_wholesale_cost AS wholesale_cost,\n        cs.cs_list_price AS list_price,\n        cs.cs_sales_price AS sales_price,\n        cs.cs_ext_discount_amt AS ext_discount_amount,\n        cs.cs_ext_sales_price AS ext_sales_price,\n        cs.cs_ext_wholesale_cost AS ext_wholesale_cost,\n        cs.cs_ext_list_price AS ext_list_price,\n        cs.cs_ext_tax AS ext_tax,\n        cs.cs_coupon_amt AS coupon_amount,\n        cs.cs_ext_ship_cost AS ext_ship_cost,\n        cs.cs_net_paid AS net_paid,\n        cs.cs_net_paid_inc_tax AS net_paid_income_tax,\n        cs.cs_net_paid_inc_ship AS net_paid_income_ship,\n        cs.cs_net_paid_inc_ship_tax net_paid_income_ship_tax,\n        cs.cs_net_profit AS net_amount \n    FROM \n        catalog_sales_source AS cs\n    \n    LEFT JOIN \n        date_ref AS dates\n    ON \n        cs.cs_sold_date_sk = dates.d_date_sk\n    LEFT JOIN \n        time_ref AS dates2\n    ON \n        cs.cs_sold_time_sk = dates2.t_time_sk\n    LEFT JOIN \n                date_ref AS dates3\n    ON \n        cs.cs_ship_date_sk = dates3.d_date_sk\n    LEFT JOIN \n        household_demographics_source AS hd\n    ON \n        cs.cs_bill_hdemo_sk = hd.hd_demo_sk\n\n)\n\nSELECT * FROM final"}, "error": null, "status": null, "execution_time": 0.012642145156860352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.541050Z", "completed_at": "2020-10-05T04:50:03.552638Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.552950Z", "completed_at": "2020-10-05T04:50:03.552957Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n    SELECT * FROM {{ ref('stg_household_demographics') }}\n)\n\nSELECT * FROM source", "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "mart", "dim", "household_demographics_dim"], "unique_id": "model.customer_analytics.household_demographics_dim", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "mart/dim/household_demographics_dim.sql", "original_file_path": "models/mart/dim/household_demographics_dim.sql", "name": "household_demographics_dim", "resource_type": "model", "alias": "household_demographics_dim", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_household_demographics"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.stg_household_demographics"]}, "description": "# Household Demographics Information\n\nThis table contains Household Demographics attributes from our demographic information\n\nThe events in this table are sample datasets from Snowflake's Trial account, via Database `SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL`.\n\n![Snowflake Database Example](https://media.giphy.com/media/V42cE3nnoFseQVno5V/giphy.gif)\n\nYou can find out more by creating a trial account in Snowflake [here](https://signup.snowflake.com/).", "columns": {"hd_demo_sk": {"name": "hd_demo_sk", "description": "Blah", "meta": {}, "data_type": null, "tags": []}, "hd_income_band_sk": {"name": "hd_income_band_sk", "description": "Blah", "meta": {}, "data_type": null, "tags": []}, "hd_buy_potential": {"name": "hd_buy_potential", "description": "Blah", "meta": {}, "data_type": null, "tags": []}, "hd_dep_count": {"name": "hd_dep_count", "description": "Blah", "meta": {}, "data_type": null, "tags": []}, "hd_vehicle_count": {"name": "hd_vehicle_count", "description": "Blah", "meta": {}, "data_type": null, "tags": []}, "income_band_bound": {"name": "income_band_bound", "description": "Blah", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart_schema.yml", "build_path": "target/compiled/customer_analytics/models/mart/dim/household_demographics_dim.sql", "compiled": true, "compiled_sql": "WITH source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_household_demographics\n)\n\nSELECT * FROM source", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_household_demographics\n)\n\nSELECT * FROM source"}, "error": null, "status": null, "execution_time": 0.014835119247436523, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.554409Z", "completed_at": "2020-10-05T04:50:03.567797Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.568182Z", "completed_at": "2020-10-05T04:50:03.568190Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- If we wanted to do any future enrichment, we could do it in this layer.\nWITH source AS (\n\n    SELECT * FROM {{ ref('stg_customer_catalog_sales') }}\n\n),\n\nfinal AS (\n\n    SELECT \n    \n         catalog_sales.*,\n        -- X $Dollars * (British Pounds / $Dollars)\n        net_amount * (.77/1) AS net_amount_british_pounds,\n        net_amount_british_pounds / quantity AS net_amount_per_order_unit_british_pounds\n    \n    FROM source AS catalog_sales\n\n)\n\nSELECT * FROM final", "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "mart", "fct", "catalog_sales_fct"], "unique_id": "model.customer_analytics.catalog_sales_fct", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "mart/fct/catalog_sales_fct.sql", "original_file_path": "models/mart/fct/catalog_sales_fct.sql", "name": "catalog_sales_fct", "resource_type": "model", "alias": "catalog_sales_fct", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_customer_catalog_sales"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.stg_customer_catalog_sales"]}, "description": "# Catalog Sales Transactions\n\nThis table contains Catalog Sales events from our transactions source for Catalog Sales.\n\nThe events in this table are sample datasets from Snowflake's Trial account, via Database `SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL`.\n\n![Snowflake Database Example](https://media.giphy.com/media/V42cE3nnoFseQVno5V/giphy.gif)\n\nYou can find out more by creating a trial account in Snowflake [here](https://signup.snowflake.com/).", "columns": {"customer_sales_sold_date": {"name": "customer_sales_sold_date", "description": "Sold Date", "meta": {}, "data_type": null, "tags": []}, "customer_sales_sold_time_am_pm": {"name": "customer_sales_sold_time_am_pm", "description": "Sold Time. Values (AM-PM)", "meta": {}, "data_type": null, "tags": []}, "customer_sales_sold_time_sub_shift": {"name": "customer_sales_sold_time_sub_shift", "description": "Sold Time. Values (Night/Day)", "meta": {}, "data_type": null, "tags": []}, "customer_sales_ship_date": {"name": "customer_sales_ship_date", "description": "Shipment Date", "meta": {}, "data_type": null, "tags": []}, "income_band_bound": {"name": "income_band_bound", "description": "Customer's Income Band", "meta": {}, "data_type": null, "tags": []}, "household_buy_potential": {"name": "household_buy_potential", "description": "Customer's Buying potential", "meta": {}, "data_type": null, "tags": []}, "item_sk": {"name": "item_sk", "description": "Item ID", "meta": {}, "data_type": null, "tags": []}, "order_number": {"name": "order_number", "description": "Order Number", "meta": {}, "data_type": null, "tags": []}, "quantity": {"name": "quantity", "description": "Quanity Amount", "meta": {}, "data_type": null, "tags": []}, "wholesale_cost": {"name": "wholesale_cost", "description": "Wholesale Cost", "meta": {}, "data_type": null, "tags": []}, "list_price": {"name": "list_price", "description": "List Price", "meta": {}, "data_type": null, "tags": []}, "sales_price": {"name": "sales_price", "description": "Sales Price", "meta": {}, "data_type": null, "tags": []}, "ext_discount_amount": {"name": "ext_discount_amount", "description": "Ext. Discount Amount", "meta": {}, "data_type": null, "tags": []}, "ext_sales_price": {"name": "ext_sales_price", "description": "Ext. Sales Price", "meta": {}, "data_type": null, "tags": []}, "ext_wholesale_cost": {"name": "ext_wholesale_cost", "description": "Ext. Wholesale Cost", "meta": {}, "data_type": null, "tags": []}, "ext_list_price": {"name": "ext_list_price", "description": "Ext. List Price", "meta": {}, "data_type": null, "tags": []}, "ext_tax": {"name": "ext_tax", "description": "Ext. Tax", "meta": {}, "data_type": null, "tags": []}, "coupon_amount": {"name": "coupon_amount", "description": "Coupon Amount", "meta": {}, "data_type": null, "tags": []}, "ext_ship_cost": {"name": "ext_ship_cost", "description": "Ext. Ship Cost", "meta": {}, "data_type": null, "tags": []}, "net_paid": {"name": "net_paid", "description": "Net Paid", "meta": {}, "data_type": null, "tags": []}, "net_paid_income_tax": {"name": "net_paid_income_tax", "description": "Net Paid Income Tax", "meta": {}, "data_type": null, "tags": []}, "net_paid_income_ship": {"name": "net_paid_income_ship", "description": "Net Paid Income Ship.", "meta": {}, "data_type": null, "tags": []}, "net_paid_income_ship_tax": {"name": "net_paid_income_ship_tax", "description": "Net Paid Income Ship. Tax", "meta": {}, "data_type": null, "tags": []}, "net_amount": {"name": "net_amount", "description": "Total Net Amount, converted into British Pounds (Oct 2020)", "meta": {}, "data_type": null, "tags": []}, "net_amount_per_order_unit_british_pounds": {"name": "net_amount_per_order_unit_british_pounds", "description": "Total Net Amount / Order Quantity, where Net Amount is the converted into British Pounds (Oct 2020)", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart_schema.yml", "build_path": "target/compiled/customer_analytics/models/mart/fct/catalog_sales_fct.sql", "compiled": true, "compiled_sql": "-- If we wanted to do any future enrichment, we could do it in this layer.\nWITH source AS (\n\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_customer_catalog_sales\n\n),\n\nfinal AS (\n\n    SELECT \n    \n         catalog_sales.*,\n        -- X $Dollars * (British Pounds / $Dollars)\n        net_amount * (.77/1) AS net_amount_british_pounds,\n        net_amount_british_pounds / quantity AS net_amount_per_order_unit_british_pounds\n    \n    FROM source AS catalog_sales\n\n)\n\nSELECT * FROM final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- If we wanted to do any future enrichment, we could do it in this layer.\nWITH source AS (\n\n    SELECT * FROM DEMO_DB.dev_raulingaverage_stage.stg_customer_catalog_sales\n\n),\n\nfinal AS (\n\n    SELECT \n    \n         catalog_sales.*,\n        -- X $Dollars * (British Pounds / $Dollars)\n        net_amount * (.77/1) AS net_amount_british_pounds,\n        net_amount_british_pounds / quantity AS net_amount_per_order_unit_british_pounds\n    \n    FROM source AS catalog_sales\n\n)\n\nSELECT * FROM final"}, "error": null, "status": null, "execution_time": 0.01992011070251465, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.569325Z", "completed_at": "2020-10-05T04:50:03.588128Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.588475Z", "completed_at": "2020-10-05T04:50:03.588484Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n\n    SELECT * FROM {{ ref('catalog_sales_fct') }}\n\n\n)\nSELECT\n    DATE_TRUNC('month',\n        customer_sales_sold_date) AS customer_sales_sold_date_month,\n    customer_sales_sold_time_sub_shift,\n    income_band_bound,\n    SUM(quantity) total_quantity,\n    SUM(wholesale_cost) AS total_wholesale_cost,\n    SUM(sales_price) AS total_sales_price\nFROM \n    source\nGROUP BY \n    customer_sales_sold_date_month,\n    customer_sales_sold_time_sub_shift,\n    income_band_bound\nORDER BY\n    customer_sales_sold_date_month ASC,\n    income_band_bound DESC", "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "mart", "fct", "catalog_sales_by_subshift_monthly_fct"], "unique_id": "model.customer_analytics.catalog_sales_by_subshift_monthly_fct", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "mart/fct/catalog_sales_by_subshift_monthly_fct.sql", "original_file_path": "models/mart/fct/catalog_sales_by_subshift_monthly_fct.sql", "name": "catalog_sales_by_subshift_monthly_fct", "resource_type": "model", "alias": "catalog_sales_by_subshift_monthly_fct", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["catalog_sales_fct"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.catalog_sales_fct"]}, "description": "# Catalog Sales (Monthly Totals by Subshifts)\n\nThis table contains monthly-level Catalog Sales by Subshifts from our transactions source for Catalog Sales.\n\nThe events in this table are sample datasets from Snowflake's Trial account, via Database `SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL`.\n\n![Snowflake Database Example](https://media.giphy.com/media/V42cE3nnoFseQVno5V/giphy.gif)\n\nYou can find out more by creating a trial account in Snowflake [here](https://signup.snowflake.com/).", "columns": {"customer_sales_sold_date_month": {"name": "customer_sales_sold_date_month", "description": "Sold Month (date) of Customer's purchases", "meta": {}, "data_type": null, "tags": []}, "income_band_bound": {"name": "income_band_bound", "description": "Income Band Interval", "meta": {}, "data_type": null, "tags": []}, "customer_sales_sold_time_sub_shift": {"name": "customer_sales_sold_time_sub_shift", "description": "Sold Time. Values (Night/Day)", "meta": {}, "data_type": null, "tags": []}, "total_quantity": {"name": "total_quantity", "description": "Total Quantity, by Month & Income Band", "meta": {}, "data_type": null, "tags": []}, "total_wholesale_cost": {"name": "total_wholesale_cost", "description": "Total Wholesale Cost, by Month & Income Band", "meta": {}, "data_type": null, "tags": []}, "total_sales_price": {"name": "total_sales_price", "description": "Total Sales Price, by Month & Income Band", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart_schema.yml", "build_path": "target/compiled/customer_analytics/models/mart/fct/catalog_sales_by_subshift_monthly_fct.sql", "compiled": true, "compiled_sql": "WITH source AS (\n\n    SELECT * FROM DEMO_DB.dev_raulingaverage.catalog_sales_fct\n\n\n)\nSELECT\n    DATE_TRUNC('month',\n        customer_sales_sold_date) AS customer_sales_sold_date_month,\n    customer_sales_sold_time_sub_shift,\n    income_band_bound,\n    SUM(quantity) total_quantity,\n    SUM(wholesale_cost) AS total_wholesale_cost,\n    SUM(sales_price) AS total_sales_price\nFROM \n    source\nGROUP BY \n    customer_sales_sold_date_month,\n    customer_sales_sold_time_sub_shift,\n    income_band_bound\nORDER BY\n    customer_sales_sold_date_month ASC,\n    income_band_bound DESC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n\n    SELECT * FROM DEMO_DB.dev_raulingaverage.catalog_sales_fct\n\n\n)\nSELECT\n    DATE_TRUNC('month',\n        customer_sales_sold_date) AS customer_sales_sold_date_month,\n    customer_sales_sold_time_sub_shift,\n    income_band_bound,\n    SUM(quantity) total_quantity,\n    SUM(wholesale_cost) AS total_wholesale_cost,\n    SUM(sales_price) AS total_sales_price\nFROM \n    source\nGROUP BY \n    customer_sales_sold_date_month,\n    customer_sales_sold_time_sub_shift,\n    income_band_bound\nORDER BY\n    customer_sales_sold_date_month ASC,\n    income_band_bound DESC"}, "error": null, "status": null, "execution_time": 0.010890007019042969, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.589787Z", "completed_at": "2020-10-05T04:50:03.599267Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.599697Z", "completed_at": "2020-10-05T04:50:03.599708Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\n\n    SELECT * FROM {{ ref('catalog_sales_fct') }}\n\n\n)\nSELECT\n    DATE_TRUNC('month',\n        customer_sales_sold_date) AS customer_sales_sold_date_month,\n    income_band_bound,\n    SUM(quantity) total_quantity,\n    SUM(wholesale_cost) AS total_wholesale_cost,\n    SUM(sales_price) AS total_sales_price\nFROM \n    source\nGROUP BY \n    customer_sales_sold_date_month,\n    income_band_bound\nORDER BY\n    customer_sales_sold_date_month ASC,\n    income_band_bound DESC", "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "mart", "fct", "catalog_sales_monthly_fct"], "unique_id": "model.customer_analytics.catalog_sales_monthly_fct", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "mart/fct/catalog_sales_monthly_fct.sql", "original_file_path": "models/mart/fct/catalog_sales_monthly_fct.sql", "name": "catalog_sales_monthly_fct", "resource_type": "model", "alias": "catalog_sales_monthly_fct", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["catalog_sales_fct"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.customer_analytics.catalog_sales_fct"]}, "description": "# Catalog Sales (Monthly Totals)\n\nThis table contains monthly-level Catalog Sales by Income bands from our transactions source for Catalog Sales.\n\nThe events in this table are sample datasets from Snowflake's Trial account, via Database `SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL`.\n\n![Snowflake Database Example](https://media.giphy.com/media/V42cE3nnoFseQVno5V/giphy.gif)\n\nYou can find out more by creating a trial account in Snowflake [here](https://signup.snowflake.com/).", "columns": {"customer_sales_sold_date_month": {"name": "customer_sales_sold_date_month", "description": "Sold Month (date) of Customer's purchases", "meta": {}, "data_type": null, "tags": []}, "income_band_bound": {"name": "income_band_bound", "description": "Income Band Interval", "meta": {}, "data_type": null, "tags": []}, "total_quantity": {"name": "total_quantity", "description": "Total Quantity, by Month & Income Band", "meta": {}, "data_type": null, "tags": []}, "total_wholesale_cost": {"name": "total_wholesale_cost", "description": "Total Wholesale Cost, by Month & Income Band", "meta": {}, "data_type": null, "tags": []}, "total_sales_price": {"name": "total_sales_price", "description": "Total Sales Price, by Month & Income Band", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart_schema.yml", "build_path": "target/compiled/customer_analytics/models/mart/fct/catalog_sales_monthly_fct.sql", "compiled": true, "compiled_sql": "WITH source AS (\n\n    SELECT * FROM DEMO_DB.dev_raulingaverage.catalog_sales_fct\n\n\n)\nSELECT\n    DATE_TRUNC('month',\n        customer_sales_sold_date) AS customer_sales_sold_date_month,\n    income_band_bound,\n    SUM(quantity) total_quantity,\n    SUM(wholesale_cost) AS total_wholesale_cost,\n    SUM(sales_price) AS total_sales_price\nFROM \n    source\nGROUP BY \n    customer_sales_sold_date_month,\n    income_band_bound\nORDER BY\n    customer_sales_sold_date_month ASC,\n    income_band_bound DESC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n\n    SELECT * FROM DEMO_DB.dev_raulingaverage.catalog_sales_fct\n\n\n)\nSELECT\n    DATE_TRUNC('month',\n        customer_sales_sold_date) AS customer_sales_sold_date_month,\n    income_band_bound,\n    SUM(quantity) total_quantity,\n    SUM(wholesale_cost) AS total_wholesale_cost,\n    SUM(sales_price) AS total_sales_price\nFROM \n    source\nGROUP BY \n    customer_sales_sold_date_month,\n    income_band_bound\nORDER BY\n    customer_sales_sold_date_month ASC,\n    income_band_bound DESC"}, "error": null, "status": null, "execution_time": 0.01107025146484375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.601594Z", "completed_at": "2020-10-05T04:50:03.611069Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.611441Z", "completed_at": "2020-10-05T04:50:03.611451Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_sales_sold_date_month", "model": "{{ ref('catalog_sales_by_subshift_monthly_fct') }}"}}, "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "schema_test", "unique_catalog_sales_by_subshift_monthly_fct_customer_sales_sold_date_month"], "unique_id": "test.customer_analytics.unique_catalog_sales_by_subshift_monthly_fct_customer_sales_sold_date_month", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "schema_test/unique_catalog_sales_by_subshift_monthly_fct_customer_sales_sold_date_month.sql", "original_file_path": "models/mart/mart_schema.yml", "name": "unique_catalog_sales_by_subshift_monthly_fct_customer_sales_sold_date_month", "resource_type": "test", "alias": "unique_catalog_sales_by_subshift_monthly_fct_customer_sales_sold_date_month", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["catalog_sales_by_subshift_monthly_fct"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.customer_analytics.catalog_sales_by_subshift_monthly_fct"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/mart/mart_schema.yml/schema_test/unique_catalog_sales_by_subshift_monthly_fct_customer_sales_sold_date_month.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_sales_sold_date_month\n\n    from DEMO_DB.dev_raulingaverage.catalog_sales_by_subshift_monthly_fct\n    where customer_sales_sold_date_month is not null\n    group by customer_sales_sold_date_month\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_sales_sold_date_month\n\n    from DEMO_DB.dev_raulingaverage.catalog_sales_by_subshift_monthly_fct\n    where customer_sales_sold_date_month is not null\n    group by customer_sales_sold_date_month\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_sales_sold_date_month"}, "error": null, "status": null, "execution_time": 0.017273902893066406, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.613239Z", "completed_at": "2020-10-05T04:50:03.629041Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.629399Z", "completed_at": "2020-10-05T04:50:03.629407Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_sales_sold_date_month", "model": "{{ ref('catalog_sales_monthly_fct') }}"}}, "database": "DEMO_DB", "schema": "dev_raulingaverage", "fqn": ["customer_analytics", "schema_test", "unique_catalog_sales_monthly_fct_customer_sales_sold_date_month"], "unique_id": "test.customer_analytics.unique_catalog_sales_monthly_fct_customer_sales_sold_date_month", "package_name": "customer_analytics", "root_path": "/Users/CloudChaoszero/Documents/Projects/customer-analytics", "path": "schema_test/unique_catalog_sales_monthly_fct_customer_sales_sold_date_month.sql", "original_file_path": "models/mart/mart_schema.yml", "name": "unique_catalog_sales_monthly_fct_customer_sales_sold_date_month", "resource_type": "test", "alias": "unique_catalog_sales_monthly_fct_customer_sales_sold_date_month", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["catalog_sales_monthly_fct"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.customer_analytics.catalog_sales_monthly_fct"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/customer_analytics/models/mart/mart_schema.yml/schema_test/unique_catalog_sales_monthly_fct_customer_sales_sold_date_month.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_sales_sold_date_month\n\n    from DEMO_DB.dev_raulingaverage.catalog_sales_monthly_fct\n    where customer_sales_sold_date_month is not null\n    group by customer_sales_sold_date_month\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_sales_sold_date_month\n\n    from DEMO_DB.dev_raulingaverage.catalog_sales_monthly_fct\n    where customer_sales_sold_date_month is not null\n    group by customer_sales_sold_date_month\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_sales_sold_date_month"}, "error": null, "status": null, "execution_time": 0.01109004020690918, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-05T04:50:03.630463Z", "completed_at": "2020-10-05T04:50:03.640523Z"}, {"name": "execute", "started_at": "2020-10-05T04:50:03.640845Z", "completed_at": "2020-10-05T04:50:03.640853Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-10-05T04:50:03.863527Z", "elapsed_time": 2.642699956893921}